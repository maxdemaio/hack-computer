// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/09/Square/SquareGame.jack

/**
 * BatCatcherGame.
 * This simple game allows the user to move a cat around
 * the screen, and change the square's size during the movement.
 * When the game starts, a square of 30 by 30 pixels is shown at the
 * top-left corner of the screen. The user controls the square as follows.
 * The 4 arrow keys are used to move the square up, down, left, and right.
 * The 'z' and 'x' keys are used, respectively, to decrement and increment
 * the square's size. The 'q' key is used to quit the game.
 */

class BatCatcherGame {
  field Cat cat;
  field int direction; // the cat's current direction: 
                      // 0=none, 1=up, 2=down, 3=left, 4=right
  field Bat[] bats; // array of bats
  field int numBats; // number of bats in the game
  field int caughtBats; // number of bats caught by the cat
  
  /** Constructs a new BatCatcher Game. */
  constructor BatCatcherGame new() {
    // Creates a 30 by 30 pixels square and positions it at the top-left
    // of the screen.
    let cat = Cat.new(0, 0, 30);
    let direction = 0;  // initial state is no movement
    let numBats = 5; // total number of bats in the game
    let bats = Array.new(numBats);
    let caughtBats = 0;
    var int i;
    for (i = 0; i < numBats; i = i + 1) {
        let random = Random.new(42 + i);  // Create a unique instance of the Random class for each Bat
        // Creates 10 by 10 pixel squares and positions them at (256...260, 128) (middle)
        let bats[i] = Bat.new(256 + i, 128, 10, random);
    }
    return this;
  }

  /** Disposes this game. */
  method void dispose() {
    do cat.dispose();
    var int i;
    for (i = 0; i < numBats; i = i + 1) {
        do bats[i].dispose();
    }
    do Memory.deAlloc(this);
    return;
  }

  /** Moves all bats randomly. */
  method void moveBats() {
    var int i;
    for (i = 0; i < numBats; i = i + 1) {
        do bats[i].moveRandomly();
    }
  }

  /** Checks if the cat has caught any bats. */
  method void checkCollision() {
    var int i;
    for (i = 0; i < numBats; i = i + 1) {
        if (bats[i].isCaught() = false && cat.touches(bats[i])) {
          do bats[i].catch();
          let caughtBats = caughtBats + 1;
        }
    }
  }

  /** Moves the square in the current direction. */
  method void moveSquare() {
    if (direction = 1) { do cat.moveUp(); }
    if (direction = 2) { do cat.moveDown(); }
    if (direction = 3) { do cat.moveLeft(); }
    if (direction = 4) { do cat.moveRight(); }
    do Sys.wait(5);  // delays the next movement
    return;
  }

  /** Runs the game: handles the user's inputs and moves the square accordingly */
  method void run() {
    var char key;  // the key currently pressed by the user
    var boolean exit;
    let exit = false;
    
    while (~exit) {
        // waits for a key to be pressed
        while (key = 0) {
          let key = Keyboard.keyPressed();
          do moveSquare();
          do moveBats();
          do checkCollision();

          if (caughtBats = numBats) {
              // All bats caught
              do exit = true;
          }
        }

        if (key = 81)  { let exit = true; }     // q key
        if (key = 131) { let direction = 1; }   // up arrow
        if (key = 133) { let direction = 2; }   // down arrow
        if (key = 130) { let direction = 3; }   // left arrow
        if (key = 132) { let direction = 4; }   // right arrow

        // waits for the key to be released
        while (~(key = 0)) {
          let key = Keyboard.keyPressed();
          do moveSquare();
          do moveBats();
          do checkCollision();
          
          if (caughtBats = numBats) {
            // All bats caught
            do exit = true;
          }
        }
    } // while

    // Game over: handle the end of the game
    if (caughtBats = numBats) {
        do printString("Congratulations! You caught all the bats!");
    } else {
        do printString("Game over! You caught " + caughtBats + " bats.");
    }

    return;
  }
}



