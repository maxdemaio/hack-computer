/**
Reference: 
http://nand2tetris-questions-and-answers-forum.32033.n3.nabble.com/Random-number-generator-for-hack-cpu-td4025503.html#a4025511
https://github.com/xctom/Nand2Tetris/blob/master/projects/09/PigDice/Random.jack
*/

class Random {
  field int seed; //random seed
  field int calledTime;

  constructor Random new(int seedIn) {
    let seed = seedIn;
    let seed = rand();
    let calledTime = 0;
    return this;
  }

  method int rand() {
    /** return a random number in the range 0..32767 */
    let seed = seed + 20251;

    if (seed < 0) {
      let seed = seed - 32767 - 1;
    }
    return seed;
  }

  method int randRange(int range) {
    /** return a random number in the range 0..range */
    var int mask;
    var int ret;

    let mask = 1;
    while (mask < range) {
        let mask = mask * 2 + 1;
    }

    let ret = rand() & mask;
    let calledTime = calledTime + 1;

    while (ret > range) {
        let ret = rand() & mask;
        let calledTime = calledTime + 1;
        let ret = ret & getShift();
    }

    return ret;
  }

    //get new shift number according to called times
  method int getShift() {
    var int temp;

    let calledTime = calledTime + 1;
    let temp = calledTime;
    
    while(temp > 9){
      let temp = temp - 9;
    }
    return temp;
  }

  //dispose the Oject
  method void dispose(){
    do Memory.deAlloc(this);
    return;
  }

  method void addCallTime(int times){
    let calledTime = calledTime + times;
    return;
  }

}